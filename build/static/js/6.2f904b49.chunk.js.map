{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntered","setIsEntered","authorInputRef","useRef","textInputRef","console","log","Fragment","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,2FCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,gCC8D/BC,EA1DG,SAACL,GACjB,MAAkCM,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBC,mBACjBC,EAAeD,mBAuBrB,OAFAE,QAAQC,IAAIN,GAGV,eAAC,IAAMO,SAAP,WACE,cAAC,IAAD,CACEC,KAAMR,EACNS,QAAS,SAACC,GAAD,MAAc,wEAEzB,cAAC,EAAD,UACE,uBAAMC,QAba,WACvBV,GAAa,IAYwBP,UAAWC,IAAQiB,KAAMC,SA5BhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCzB,EAAM2B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAoB5C,UACG1B,EAAM8B,WACL,qBAAK7B,UAAWC,IAAQ6B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK/B,UAAWC,IAAQ+B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKR,UAAWC,IAAQ+B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKV,UAAWC,IAAQqC,QAAxB,SACE,wBAAQC,QAjCS,WACzBhC,GAAa,IAgCgCP,UAAU,MAA/C,kC,gBC7BGwC,UArBE,WACf,IAAMC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACO,cAAXD,GACFL,EAAQO,KAAK,aAEd,CAACF,EAAQL,IAMZ,OACE,8BACE,cAAC,EAAD,CAAWZ,UAAsB,YAAXiB,EAAsBpB,WANxB,SAACuB,GACvBJ,EAAYI","file":"static/js/6.2f904b49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2V8Ne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Es1f\",\"loading\":\"QuoteForm_loading__2UNVp\",\"control\":\"QuoteForm_control__3soxm\",\"actions\":\"QuoteForm_actions__1Ev6I\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useRef, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { Prompt } from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishFocusHandler = () => {\n    setIsEntered(false);\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  };\n\n  console.log(isEntered);\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={isEntered}\n        message={(location) => 'Are you sure you wanna leave the page, all your data will be lost!'}\n      />\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishFocusHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const history = useHistory();\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push('/quotes');\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}